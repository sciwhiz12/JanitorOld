import java.time.OffsetDateTime

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.ajoberstar.grgit', name: 'grgit-gradle', version: grgit_version
        classpath group: 'com.github.jengelman.gradle.plugins', name: 'shadow', version: shadow_version
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven-publish'
apply from: 'utils/version.gradle'

group = 'tk.sciwhiz12.janitor'
version = calculateVersion()
println("Version: ${version}")

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = "Minecraft Libraries"
        url = "https://libraries.minecraft.net"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

application {
    mainClassName = 'tk.sciwhiz12.janitor.BotStartup'
}

sourceSets { api }

configurations {
    apiImplementation.extendsFrom apiDependency
    api {
        canBeConsumed = true
        canBeResolved = true
        extendsFrom apiDependency
    }
    implementation.extendsFrom apiImplementation, api
    'default' {
        extendsFrom api, apiDependency
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def datetime = OffsetDateTime.now()
jar {
    from sourceSets.api.output
    finalizedBy 'sourcesJar', 'shadowJar'
    manifest {
        attributes([
                "Specification-Title"   : "Janitor",
                "Specification-Vendor"  : "sciwhiz12",
                "Specification-Version" : project.version,
                "Implementation-Title"  : project.name,
                "Implementation-Vendor" : "sciwhiz12",
                "Implementation-Version": getCommitHash(),
                "Built-By-Java"         : System.getProperty('java.version'),
                "Built-By-JVM"          : System.getProperty('java.vm.version') + ' (' + System.getProperty('java.vendor') + ')',
                "Commit-Hash"           : getCommitHash(),
                "Commit-Timestamp"      : getCommitTimestamp()
        ] as LinkedHashMap)
    }
}

shadowJar {
    exclude 'META-INF/NOTICE**'
    exclude 'META-INF/LICENSE**'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/proguard/**'
    exclude 'META-INF/maven/**'
    classifier 'all'
    includeEmptyDirs false
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    from sourceSets.api.allSource
    classifier "sources"
}

dependencies {
    api sourceSets.api.output

    apiDependency group: 'net.dv8tion', name: 'JDA', version: jda_version
    apiDependency group: 'com.electronwill.night-config', name: 'toml', version: nightconfig_version
    apiDependency group: 'net.sf.jopt-simple', name: 'jopt-simple', version: jopt_version
    apiDependency group: 'com.google.guava', name: 'guava', version: guava_version
    apiDependency group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson_version
    apiDependency group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version
    apiDependency group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version
    apiDependency group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: log4j_bridge_version
    apiDependency group: 'ch.qos.logback', name: 'logback-classic', version: logback_version
    apiDependency group: 'com.mojang', name: 'brigadier', version: brigadier_version

    testImplementation group: 'junit', name: 'junit', version: junit_version
}


